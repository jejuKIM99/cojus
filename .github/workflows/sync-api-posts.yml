name: sync-api-posts

# 1) 퍼미션: GITHUB_TOKEN에 쓰기 권한
permissions:
  contents: write
  packages: write

on:
  schedule:
    - cron: '0 * * * *'       # 매시 정각
  workflow_dispatch:          # 수동 실행 지원

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Restore package-lock.json
        run: git checkout -- package-lock.json

      # ----- 기존 API posts 동기화 -----
      - name: Fetch API posts (latest only)
        run: npm run fetch-data

      # ----- 추가: 각 포스트별 버전 정보 동기화 -----
      - name: Fetch API post versions
        run: npm run fetch-versions

      - name: Check for data/ folder changes
        id: detect_changes
        run: |
          # api_posts.json 또는 versions/ 내 JSON 파일 변경 여부 감지
          git diff --quiet data/ || echo "::set-output name=changed::true"

      - name: No changes, exit
        if: steps.detect_changes.outputs.changed != 'true'
        run: |
          echo "data/ 폴더에 변경된 항목이 없습니다. 작업 종료."
          exit 0

      - name: Commit updated data files
        if: steps.detect_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/
          git commit -m "chore: update API posts & versions data"

      - name: Bump patch version
        if: steps.detect_changes.outputs.changed == 'true'
        run: |
          npm version patch -m "chore: bump version to %s"

      - name: Push changes & tags
        if: steps.detect_changes.outputs.changed == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
          branch: main

      - name: Publish to npm
        if: steps.detect_changes.outputs.changed == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
