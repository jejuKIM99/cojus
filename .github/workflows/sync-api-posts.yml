name: Sync API Posts and Publish cojus-cli

# 1시간마다 한 번씩 실행 (cron: UTC 기준)
on:
  schedule:
    - cron: '0 15 * * *'      # 매 시간 정각 (UTC) → 한국 시각 기준 시+9
  workflow_dispatch:         # 수동 실행 가능

jobs:
  sync-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1) 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true   # 이후 git push를 위해 필요

      # 2) Node.js 설정 및 npm 레지스트리 인증
      - name: Setup Node.js and npm auth
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Configure npm auth token
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # 3) Supabase 환경변수 로드
      - name: Load Supabase environment variables
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> $GITHUB_ENV
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> $GITHUB_ENV

      # 4) 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 5) Supabase에서 데이터 가져와 JSON 업데이트
      - name: Fetch API Posts to JSON
        run: npm run fetch-data

      # 6) 변경 감지 → 버전 bump → npm publish → Git 커밋 & 푸시
      - name: Check for changes, bump version, and publish to npm
        run: |
          # JSON만 변경됐을 때(패치할 항목이 있을 때)만 실행
          if [[ -n "$(git status --porcelain -- data/api_posts.json)" ]]; then
            echo "🔄 data/api_posts.json 변경 감지됨. 버전 bump 및 npm publish 진행."

            # 6-1) 패치 버전 자동 증가 (package.json과 package-lock.json만 변경)
            npm version patch --no-git-tag-version

            # 6-2) npm 레지스트리에 퍼블리시 (토큰 인증 완료된 상태)
            npm publish --access public

            # 6-3) Git 사용자 정보 설정 (Actions bot)
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            # 6-4) 변경된 파일들 스테이징
            git add data/api_posts.json package.json package-lock.json

            # 6-5) 커밋 (메시지에 [skip ci] 추가하여 무한 재실행 방지)
            git commit -m "chore: update api_posts.json & bump version [skip ci]"

            # 6-6) 브랜치에 푸시
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "✅ data/api_posts.json 변경 없음. npm publish 스킵."
          fi
